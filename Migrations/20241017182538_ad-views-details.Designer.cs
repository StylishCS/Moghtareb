// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moghtareb.Models;

#nullable disable

namespace Moghtareb.Migrations
{
    [DbContext(typeof(MoghtarebDbContext))]
    [Migration("20241017182538_ad-views-details")]
    partial class adviewsdetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Moghtareb.Models.Ad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("area")
                        .HasColumnType("float");

                    b.Property<int>("bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("bedrooms")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("deposit")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("governorate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("insurance")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isRented")
                        .HasColumnType("bit");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("rentalFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("Moghtareb.Models.AdImage", b =>
                {
                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.HasKey("imageUrl");

                    b.HasIndex("adId");

                    b.ToTable("AdImages");
                });

            modelBuilder.Entity("Moghtareb.Models.AdReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("adId");

                    b.ToTable("AdReports");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserPhoneView", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.HasKey("userId", "adId");

                    b.HasIndex("adId");

                    b.ToTable("AdUserPhoneViews");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserView", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.HasKey("userId", "adId");

                    b.HasIndex("adId");

                    b.ToTable("AdUserViews");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserWhatsappView", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.HasKey("userId", "adId");

                    b.HasIndex("adId");

                    b.ToTable("AdUserWhatsappViews");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserWishlist", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("adId")
                        .HasColumnType("int");

                    b.HasKey("userId", "adId");

                    b.HasIndex("adId");

                    b.ToTable("AdUserWishlists");
                });

            modelBuilder.Entity("Moghtareb.Models.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("issuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("stripeTransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Moghtareb.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("degree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("deletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("governorate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("isSecured")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("university")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("whatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Moghtareb.Models.Ad", b =>
                {
                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("Ads")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.AdImage", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany("Images")
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");
                });

            modelBuilder.Entity("Moghtareb.Models.AdReport", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany()
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserPhoneView", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany("phoneViews")
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("phoneViews")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserView", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany("views")
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("views")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserWhatsappView", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany("whatsViews")
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("whatsViews")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.AdUserWishlist", b =>
                {
                    b.HasOne("Moghtareb.Models.Ad", "ad")
                        .WithMany("Wishlist")
                        .HasForeignKey("adId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("Wishlist")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ad");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.Transaction", b =>
                {
                    b.HasOne("Moghtareb.Models.User", "user")
                        .WithMany("Transactions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Moghtareb.Models.Ad", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Wishlist");

                    b.Navigation("phoneViews");

                    b.Navigation("views");

                    b.Navigation("whatsViews");
                });

            modelBuilder.Entity("Moghtareb.Models.User", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Transactions");

                    b.Navigation("Wishlist");

                    b.Navigation("phoneViews");

                    b.Navigation("views");

                    b.Navigation("whatsViews");
                });
#pragma warning restore 612, 618
        }
    }
}
